CREATE TABLE IF NOT EXISTS users (
  username VARCHAR(25) PRIMARY KEY UNIQUE NOT NULL,
  first_name VARCHAR(25) NOT NULL,
  last_name VARCHAR(25) NOT NULL,
  email VARCHAR(25) NOT NULL,
    CHECK (position('@' IN email) > 1),
  password VARCHAR(100) NOT NULL,
  image_url TEXT DEFAULT 'Sorry no image yet.',
  header_image_url TEXT DEFAULT 'Sorry no image yet.',
  college VARCHAR(25) NOT NULL,
  proficiency_of_Chinese TEXT NOT NULL,
  current_city VARCHAR(25),
  hometown VARCHAR(25),
  since TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  is_admin BOOLEAN NOT NULL DEFAULT FALSE
);


CREATE TABLE IF NOT EXISTS posts (
  id SERIAL PRIMARY KEY,
  username TEXT NOT NULL 
    REFERENCES users ON DELETE CASCADE,
  body VARCHAR(255) NOT NULL,
  pic TEXT,
  posted_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS announcements (
  id SERIAL PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  username TEXT NOT NULL 
    REFERENCES users ON DELETE CASCADE,
  body TEXT NOT NULL,
  pic TEXT,
  posted_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);



CREATE TABLE IF NOT EXISTS questions (
  id SERIAL PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  username TEXT NOT NULL 
    REFERENCES users ON DELETE CASCADE,
  body VARCHAR(255) NOT NULL,
  posted_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);



CREATE TABLE IF NOT EXISTS answers (
  id SERIAL PRIMARY KEY,
  question_id INT NOT NULL REFERENCES questions ON DELETE CASCADE,
  username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  body VARCHAR(255) NOT NULL,
  posted_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS friends (
  id SERIAL PRIMARY KEY,
  username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  friend_username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  since TIMESTAMPTZ NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS follows(
  id SERIAL PRIMARY KEY,
  following_username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  followed_username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  since TIMESTAMPTZ NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS followers(
  id SERIAL PRIMARY KEY,
  username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  follower_username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  since TIMESTAMPTZ NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS likes (
  id SERIAL PRIMARY KEY,
  post_id INT NOT NULL REFERENCES posts ON DELETE CASCADE,
  username TEXT NOT NULL REFERENCES users ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS friend_requests (
  id SERIAL PRIMARY KEY,
  sender_username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  receiver_username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  sent_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);


CREATE TABLE IF NOT EXISTS announcement_requests (
  id SERIAL PRIMARY KEY,
  sender_username TEXT NOT NULL REFERENCES users ON DELETE CASCADE,
  title VARCHAR(255) NOT NULL,
  body VARCHAR(255) NOT NULL,
  pic TEXT,
  sent_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);




